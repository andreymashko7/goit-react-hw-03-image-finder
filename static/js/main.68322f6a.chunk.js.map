{"version":3,"sources":["components/Loader/Loader.module.css","services/pixabay-api.js","components/Modal/Modal.js","components/ImageGalleryItem/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","components/Loader/Loader.js","components/Button/Button.js","components/imagesInfo/imagesInfo.js","components/Searchbar/Searchbar.js","App.js","index.js"],"names":["module","exports","api","fetchImages","imageName","page","fetch","then","response","ok","json","Promise","rejected","Error","modalRoot","document","querySelector","Modal","handleKeyDown","e","code","props","onClose","handleBackdropClick","event","currentTarget","target","window","addEventListener","this","removeEventListener","src","alt","createPortal","className","onClick","Component","ImageGalleryItem","state","showModal","toggleModal","setState","largeImageUrl","ImageGallery","images","map","image","webformatURL","tags","largeImageURL","id","App","s","loader","type","color","height","width","Button","scroll","onclick","ImagesInfo","error","status","onClickLoadMore","prevState","prevProps","prevName","nextName","prevPage","nextPage","galeryAPI","data","total","reject","hits","catch","scrollTo","top","documentElement","scrollHeight","behavior","message","Searchbar","handleNameChange","value","toLowerCase","handleSubmit","preventDefault","trim","toast","info","onSubmit","autoComplete","autoFocus","placeholder","onChange","handleFormSubmit","autoClose","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.68322f6a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"Loader_loader__jGlx1\"};","function fetchImages(imageName, page) {\r\n  return fetch(\r\n    `https://pixabay.com/api/?q=${imageName}&page=${page}&key=19012296-41da2131aa4097137b6521ff0&image_type=all&orientation=horizontal&per_page=12`\r\n  ).then((response) => {\r\n    if (response.ok) {\r\n      return response.json();\r\n    }\r\n    return Promise.rejected(new Error(`No response from server`));\r\n  });\r\n}\r\n\r\nconst api = {\r\n  fetchImages,\r\n};\r\n\r\nexport default api;\r\n","import React, { Component } from \"react\";\r\nimport { createPortal } from \"react-dom\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst modalRoot = document.querySelector(\"#modal-root\");\r\n\r\nclass Modal extends Component {\r\n  static propTypes = {\r\n    onClose: PropTypes.func.isRequired,\r\n    src: PropTypes.string.isRequired,\r\n    alt: PropTypes.string.isRequired,\r\n  };\r\n\r\n  componentDidMount() {\r\n    window.addEventListener(\"keydown\", this.handleKeyDown);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"keydown\", this.handleKeyDown);\r\n  }\r\n\r\n  handleKeyDown = (e) => {\r\n    if (e.code === \"Escape\") {\r\n      this.props.onClose();\r\n    }\r\n  };\r\n\r\n  handleBackdropClick = (event) => {\r\n    if (event.currentTarget === event.target) {\r\n      this.props.onClose();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { src, alt } = this.props;\r\n\r\n    return createPortal(\r\n      <div className=\"Overlay\" onClick={this.handleBackdropClick}>\r\n        <div className=\"Modal\">\r\n          <img src={src} alt={alt} />\r\n        </div>\r\n      </div>,\r\n      modalRoot\r\n    );\r\n  }\r\n}\r\n\r\nexport default Modal;\r\n","import PropTypes from \"prop-types\";\r\nimport { Component } from \"react\";\r\nimport Modal from \"../Modal\";\r\n\r\nclass ImageGalleryItem extends Component {\r\n  state = {\r\n    showModal: false,\r\n  };\r\n\r\n  static propTypes = {\r\n    src: PropTypes.string.isRequired,\r\n    alt: PropTypes.string.isRequired,\r\n    largeImageUrl: PropTypes.string.isRequired,\r\n  };\r\n\r\n  toggleModal = () => {\r\n    this.setState(({ showModal }) => ({ showModal: !showModal }));\r\n  };\r\n\r\n  render() {\r\n    const { alt, src, largeImageUrl } = this.props;\r\n    const { showModal } = this.state;\r\n    return (\r\n      <li className=\"ImageGalleryItem\">\r\n        <img\r\n          src={src}\r\n          alt={alt}\r\n          onClick={this.toggleModal}\r\n          className=\"ImageGalleryItem-image\"\r\n        />\r\n        {showModal && (\r\n          <Modal onClose={this.toggleModal} src={largeImageUrl} alt={alt} />\r\n        )}\r\n      </li>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ImageGalleryItem;\r\n","import PropTypes from \"prop-types\";\r\nimport ImageGalleryItem from \"../ImageGalleryItem\";\r\n\r\nfunction ImageGallery({ images }) {\r\n  return (\r\n    <ul className=\"ImageGallery\">\r\n      {images.map((image) => (\r\n        <ImageGalleryItem\r\n          src={image.webformatURL}\r\n          alt={image.tags}\r\n          key={image.id}\r\n          largeImageUrl={image.largeImageURL}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nImageGallery.propTypes = {\r\n  images: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default ImageGallery;\r\n","import React, { Component } from \"react\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\nimport s from \"./Loader.module.css\";\r\n\r\nexport default class App extends Component {\r\n  render() {\r\n    return (\r\n      <div className={s.loader}>\r\n        <Loader type=\"TailSpin\" color=\"#00BFFF\" height={120} width={120} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass Button extends Component {\r\n  static propTypes = {\r\n    onClick: PropTypes.func,\r\n  };\r\n\r\n  scroll = () => {\r\n    this.props.onclick();\r\n  };\r\n  render() {\r\n    return (\r\n      <button type=\"button\" className=\"Button\" onClick={this.scroll}>\r\n        Load more\r\n      </button>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Button;\r\n","import { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport galeryAPI from \"../../services/pixabay-api\";\r\nimport ImageGallery from \"../ImageGallery\";\r\nimport Loader from \"../Loader\";\r\nimport Button from \"../Button\";\r\n\r\nexport default class ImagesInfo extends Component {\r\n  state = {\r\n    images: [],\r\n    error: null,\r\n    page: 1,\r\n    status: \"idle\",\r\n  };\r\n\r\n  static propTypes = {\r\n    imageName: PropTypes.string.isRequired,\r\n  };\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    const prevName = prevProps.imageName;\r\n    const nextName = this.props.imageName;\r\n    const prevPage = prevState.page;\r\n    const nextPage = this.state.page;\r\n\r\n    if (prevName !== nextName) {\r\n      this.setState({ images: [] });\r\n    }\r\n\r\n    if (prevName !== nextName || prevPage !== nextPage) {\r\n      this.setState({ status: \"pending\" });\r\n\r\n      galeryAPI\r\n        .fetchImages(nextName, nextPage)\r\n        .then((data) => {\r\n          if (data.total !== 0) {\r\n            this.setState((prevState) => ({\r\n              images: [...prevState.images, ...data.hits],\r\n              status: \"resolved\",\r\n            }));\r\n            return;\r\n          }\r\n          return Promise.reject(\r\n            new Error(`\r\n                Could not find pictures for the request : \"${nextName}\"`)\r\n          );\r\n        })\r\n        .catch((error) => this.setState({ error, status: \"rejected\" }));\r\n    }\r\n\r\n    window.scrollTo({\r\n      top: document.documentElement.scrollHeight,\r\n      behavior: \"smooth\",\r\n    });\r\n  }\r\n  onClickLoadMore = () => {\r\n    this.setState((prevState) => ({ page: prevState.page + 1 }));\r\n  };\r\n\r\n  render() {\r\n    const { error, status } = this.state;\r\n\r\n    if (status === \"idle\") {\r\n      return <p className=\"InfoText\">Please enter some search keyword</p>;\r\n    }\r\n\r\n    if (status === \"pending\") {\r\n      return <Loader />;\r\n    }\r\n\r\n    if (status === \"rejected\") {\r\n      return <p className=\"ErrorText\">{error.message}</p>;\r\n    }\r\n\r\n    if (status === \"resolved\") {\r\n      return (\r\n        <>\r\n          <ImageGallery images={this.state.images} />\r\n          <Button onclick={this.onClickLoadMore} page={this.state.page} />\r\n        </>\r\n      );\r\n    }\r\n  }\r\n}\r\n","import { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nclass Searchbar extends Component {\r\n  state = {\r\n    imageName: \"\",\r\n  };\r\n\r\n  static propTypes = {\r\n    onSubmit: PropTypes.func,\r\n  };\r\n\r\n  handleNameChange = (event) => {\r\n    this.setState({ imageName: event.currentTarget.value.toLowerCase() });\r\n  };\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    if (this.state.imageName.trim() === \"\") {\r\n      return toast.info(\"Please enter something\");\r\n    }\r\n\r\n    this.props.onSubmit(this.state.imageName);\r\n    this.setState({ imageName: \"\" });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <header className=\"Searchbar\">\r\n        <form className=\"SearchForm\" onSubmit={this.handleSubmit}>\r\n          <button type=\"submit\" className=\"SearchForm-button\">\r\n            <span className=\"SearchForm-button-label\">Search</span>\r\n          </button>\r\n\r\n          <input\r\n            className=\"SearchForm-input\"\r\n            type=\"text\"\r\n            autoComplete=\"off\"\r\n            autoFocus\r\n            placeholder=\"Search images and photos\"\r\n            value={this.state.imageName}\r\n            onChange={this.handleNameChange}\r\n          />\r\n        </form>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Searchbar;\r\n","import \"./App.css\";\nimport { ToastContainer } from \"react-toastify\";\nimport { Component } from \"react\";\nimport ImagesInfo from \"./components/imagesInfo\";\nimport Searchbar from \"./components/Searchbar\";\n\nclass App extends Component {\n  state = {\n    imageName: \"\",\n  };\n\n  handleFormSubmit = (imageName) => {\n    this.setState({ imageName });\n  };\n\n  render() {\n    return (\n      <>\n        <Searchbar onSubmit={this.handleFormSubmit} />\n        <ImagesInfo imageName={this.state.imageName} page={this.state.page} />\n        <ToastContainer autoClose={3000} />\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}